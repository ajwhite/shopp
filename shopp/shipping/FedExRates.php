<?php
/**
 * FedEx Rates
 * 
 * Uses FedEx Web Services to get live shipping rates based on product weight
 * 
 * INSTALLATION INSTRUCTIONS
 * Upload FedExRates.php to your Shopp install under:
 * ./wp-content/plugins/shopp/shipping/
 *
 * @author Jonathan Davis
 * @version 1.1.2
 * @copyright Ingenesis Limited, 22 January, 2009
 * @package shopp
 * @since 1.1
 * @subpackage FedExRates
 * 
 * $Id$
 **/

class FedExRates extends ShippingFramework implements ShippingModule {

	var $wsdl_url = "";
	var $url = "https://gateway.fedex.com:443/web-services";
	var $test_url = "https://gatewaybeta.fedex.com:443/web-services";

	var $packages = array();
	
	var $test = false;
	var $postcode = true;
	var $dimensions = true;
	var $singular = true; // module only can be loaded once
	
	var $services = array(
		'FEDEX_GROUND' => 'FedEx Ground',
		'GROUND_HOME_DELIVERY' => 'FedEx Home Delivery',
		'FEDEX_EXPRESS_SAVER' => 'FedEx Express Saver',
		'FEDEX_2_DAY' => 'FedEx 2Day',
		'STANDARD_OVERNIGHT' => 'FedEx Standard Overnight',
		'PRIORITY_OVERNIGHT' => 'FedEx Priority Overnight',
		'FIRST_OVERNIGHT' => 'FedEx First Overnight',
		'INTERNATIONAL_ECONOMY' => 'FedEx International Economy',
		'INTERNATIONAL_FIRST' => 'FedEx International First',
		'INTERNATIONAL_PRIORITY' => 'FedEx International Priority',
		'EUROPE_FIRST_INTERNTIONAL_PRIORITY' => 'FedEx Europe First International Priority',
		'FEDEX_1_DAY_FREIGHT' => 'FedEx 1Day Freight',
		'FEDEX_2_DAY_FREIGHT' => 'FedEx 2Day Freight',
		'FEDEX_3_DAY_FREIGHT' => 'FedEx 3Day Freight',
		'INTERNATIONAL_ECONOMY_FREIGHT' => 'FedEx Economy Freight',
		'INTERNATIONAL_PRIORITY_FREIGHT' => 'FedEx Priority Freight',
		'FEDEX_FREIGHT' => 'Fedex Freight',
		'FEDEX_NATIONAL_FREIGHT' => 'FedEx National Freight',
		'INTERNATIONAL_GROUND' => 'FedEx International Ground',
		'SMART_POST' => 'FedEx Smart Post'	
		);
	var $deliverytimes = array(
		'ONE_DAY' => '1d',
		'TWO_DAYS' => '2d',
		'THREE_DAYS' => '3d',
		'FOUR_DAYS' => '4d',
		'FIVE_DAYS' => '5d',
		'SIX_DAYS' => '6d',
		'SEVEN_DAYS' => '7d',
		'EIGHT_DAYS' => '8d',
		'NINE_DAYS' => '9d',
		'TEN_DAYS' => '10d',
		'ELEVEN_DAYS' => '11d',
		'TWELVE_DAYS' => '12d',
		'THIRTEEN_DAYS' => '13d',
		'FOURTEEN_DAYS' => '14d',
		'FIFTEEN_DAYS' => '15d',
		'SIXTEEN_DAYS' => '16d',
		'SEVENTEEN_DAYS' => '17d',
		'EIGHTEEN_DAYS' => '18d',
		'NINETEEN_DAYS' => '19d',
		'TWENTY_DAYS' => '20d',
		'UNKNOWN' => '30d'
		);
	
	function __construct () {
		parent::__construct();
		$Settings = ShoppSettings();
		$this->setup('account','meter','postcode','key','password','smartposthubid','insure','saturday');

		if ($this->singular && is_array($this->rates) && !empty($this->rates))  $this->rate = reset($this->rates); // TODO: remove after 1.1.3
		
		add_action('shipping_service_settings',array(&$this,'settings'));
		add_action('shopp_verify_shipping_services',array(&$this,'verify'));

		$this->wsdl_url = add_query_arg('shopp_fedex','wsdl',get_bloginfo('siteurl'));
		$this->wsdl();
		
		if (defined('SHOPP_FEDEX_TESTMODE')) $this->test = SHOPP_FEDEX_TESTMODE;
		
		$this->insure = ($this->settings['insure'] == 'on');
		$this->settings['base_operations'] = $Settings->get('base_operations');
		
	}
		
	function methods () {
		if (class_exists('SoapClient') || class_exists('SOAP_Client'))
			return array(__("FedEx Rates","Shopp"));
		elseif (class_exists('ShoppError'))
			new ShoppError("The SoapClient class is not enabled for PHP. The FedEx Rates add-on cannot be used without the SoapClient class.","fedexrates_nosoap",SHOPP_ALL_ERR);
	}
		
	function ui () { ?>
		function FedExRates (methodid,table,rates) {
			table.addClass('services').empty();
			
			if (!uniqueMethod(methodid,'<?php echo get_class($this); ?>')) return;
			
			var services = <?php echo json_encode($this->services); ?>;
			var settings = '';
			settings += '<tr><td>';
			settings += '<style type="text/css">#shipping-rates th.fedexrates { background: url(data:image/png;base64,<?php echo $this->logo(); ?>) no-repeat 20px 25px; }</style>';
			settings += '<input type="hidden" name="settings[shipping_rates]['+methodid+'][postcode-required]" value="true" />';

			settings += '<div class="multiple-select"><ul id="fedex-services">';
		
			settings += '<li><input type="checkbox" name="select-all" id="fedex-services-select-all" /><label for="fedex-services-select-all"><strong><?php _e('Select All','Shopp'); ?></strong></label>';
			var even = true;

			for (var service in services) {
				var checked = '';
				even = !even;
				for (var r in rates.services) 
					if (rates.services[r] == service) checked = ' checked="checked"';
				settings += '<li class="'+((even)?'even':'odd')+'"><input type="checkbox" name="settings[shipping_rates]['+methodid+'][services][]" value="'+service+'" id="fedex-service-'+service+'"'+checked+' /><label for="fedex-service-'+service+'">'+services[service]+'</label></li>';
			}

			settings += '</td>';
			
			settings += '<td>';
			settings += '<div><input type="text" name="settings[FedExRates][account]" id="fedexrates_account" value="<?php echo $this->settings['account']; ?>" size="11" /><br /><label for="fedexrates_account"><?php _e('Account Number','Shopp'); ?></label></div>';
			settings += '<div><input type="text" name="settings[FedExRates][meter]" id="fedexrates_meter" value="<?php echo $this->settings['meter']; ?>" size="11" /><br /><label for="fedexrates_meter"><?php _e('Meter Number','Shopp'); ?></label></div>';
			settings += '<div><input type="text" name="settings[FedExRates][postcode]" id="fedexrates_postcode" value="<?php echo $this->settings['postcode']; ?>" size="7" /><br /><label for="fedexrates_postcode"><?php _e('Your postal code','Shopp'); ?></label></div>';
			settings += '<div><input type="text" name="settings[FedExRates][smartposthubid]" id="fedexrates_smartposthubid" value="<?php echo $this->settings['smartposthubid']; ?>" size="7" /><br /><label for="fedexrates_smartposthubid"><?php _e('SmartPost HubID (Required for SmartPost)','Shopp'); ?></label></div>';
				
			settings += '</td>';
			settings += '<td>';
			settings += '<div><input type="text" name="settings[FedExRates][key]" id="fedexrates_key" value="<?php echo $this->settings['key']; ?>" size="16" /><br /><label for="fedexrates_key"><?php _e('FedEx web services key','Shopp'); ?></label></div>';
			settings += '<div><input type="password" name="settings[FedExRates][password]" id="fedexrates_password" value="<?php echo $this->settings['password']; ?>" size="16" /><br /><label for="fedexrates_password"><?php _e('FedEx web services password','Shopp'); ?></label></div>';
			settings += '<div><input type="hidden" name="settings[FedExRates][insure]" value="off" /><input type="checkbox" name="settings[FedExRates][insure]" id="fedexrates_insure" value="on"<?php echo ($this->settings['insure'] == "on")?' checked="checked"':''; ?> /><label for="fedexrates_insure"> <?php echo addslashes(__('Rates include insurance.','Shopp')); ?></label></div>';
			settings += '<div><input type="hidden" name="settings[FedExRates][saturday]" value="off" /><input type="checkbox" name="settings[FedExRates][saturday]" id="fedexrates_saturday" value="on"<?php echo ($this->settings['saturday'] == "on")?' checked="checked"':''; ?> /><label for="fedexrates_saturday"> <?php echo addslashes(__('Include only methods with Saturday delivery.','Shopp')); ?></label></div>';
			settings += '</td>';
			settings += '</tr>';


			$(settings).appendTo(table);

			$('#fedex-services-select-all').change(function () {
				if (this.checked) $('#fedex-services input').attr('checked',true);
				else $('#fedex-services input').attr('checked',false);
			});
				
			quickSelects();

		}

		methodHandlers.register('<?php echo get_class($this); ?>',FedExRates);

		<?php		
	}

	function init () {
		$this->packages = array();
	}
	
	function calcitem ($id,$Item) {
		$precision = $this->settings['base_operations']['currency']['format']['precision'];
		
		for ($i = 0; $i < $Item->quantity; $i++) {
			$count = count($this->packages) + 1;
			$this->packages[$count] = array(
				'weight' => convert_unit($Item->weight,'lb'),
				'height' => convert_unit($Item->height, 'in'),
				'length' => convert_unit($Item->length, 'in'),
				'width' => convert_unit($Item->width, 'in'),
				'insure' => number_format($Item->unitprice,$precision)
				);
		}
		if(SHOPP_DEBUG) new ShoppError('packages '._object_r($this->packages),false,SHOPP_DEBUG_ERR);
	}
	
	function calculate ($options,$Order) {
		// Don't get an estimate without a postal code
		if (empty($Order->Shipping->postcode)) return $options;

		$request = $this->build(session_id(), $this->rate['name'], 
			$Order->Shipping);
		$Response = $this->send($request);
		if(SHOPP_DEBUG) new ShoppError('RESPONSE: '._object_r($Response),false,SHOPP_DEBUG_ERR);
		if (!$Response) {
			new ShoppError(apply_filters('shopp_fedex_error',__('There was an error obtaining FedEx Rates.','Shopp')), 'fedex_rate_error', SHOPP_ADDON_ERR); 
			return apply_filters('shopp_fedex_rates', false, &$options, &$Order); // useful for adding your own hardcoded options
		}	
		if ($Response->HighestSeverity == 'FAILURE' || 
		 		$Response->HighestSeverity == 'ERROR') {
			new ShoppError(apply_filters('shopp_fedex_error', $Response->Notifications->Message),'fedex_rate_error',SHOPP_ADDON_ERR);
			return apply_filters('shopp_fedex_rates', false, &$options, &$Order); // useful for adding your own hardcoded options
		}

		$estimate = false;
		
		$RatedReply = &$Response->RateReplyDetails;
		if (!is_array($RatedReply)) return false;
		foreach ($RatedReply as $quote) {
			if (!in_array($quote->ServiceType,$this->rate['services'])) continue;
			
			$name = $this->services[$quote->ServiceType];
			if (is_array($quote->RatedShipmentDetails)) 
				$details = &$quote->RatedShipmentDetails[0];
			else $details = &$quote->RatedShipmentDetails;
			
			if (isset($quote->DeliveryTimestamp)) 
				$delivery = $this->timestamp_delivery($quote->DeliveryTimestamp);
			elseif(isset($quote->TransitTime))
				$delivery = $this->deliverytimes[$quote->TransitTime];
			else $delivery = '5d-7d';
			
			$amount = apply_filters('shopp_fedex_total',$details->ShipmentRateDetail->TotalNetCharge->Amount,$details);

			$rate = array();
			$rate['name'] = $name;
			$rate['amount'] = $amount;
			$rate['delivery'] = $delivery;
			$options[$rate['name']] = new ShippingOption($rate);
		}
		
		return apply_filters('shopp_fedex_rates', $options, &$options, &$Order); // added for completeness
	}
	
	function timestamp_delivery ($datetime) {
		list($year,$month,$day,$hour,$min,$sec) = sscanf($datetime,"%4d-%2d-%2dT%2d:%2d:%2d");
		$days = ceil((mktime($hour,$min,$sec,$month,$day,$year) - mktime())/86400);
		return $days.'d';
	}
	
	function build ($session,$description,$Shipping) {
		
		$_ = array();

		$_['WebAuthenticationDetail'] = array(
			'UserCredential' => array(
				'Key' => $this->settings['key'], 
				'Password' => $this->settings['password']));

		$_['ClientDetail'] = array(
			'AccountNumber' => $this->settings['account'],
			'MeterNumber' => $this->settings['meter']);

		$_['TransactionDetail'] = array(
			'CustomerTransactionId' => empty($session)?mktime():$session);

		$_['Version'] = array(
			'ServiceId' => 'crs', 
			'Major' => '9', 
			'Intermediate' => '0', 
			'Minor' => '0');

		$_['ReturnTransitAndCommit'] = '1'; 

		$_['RequestedShipment'] = array();
		$_['RequestedShipment']['ShipTimestamp'] = date('c');
		
		// Valid values REGULAR_PICKUP, REQUEST_COURIER, ...
		$_['RequestedShipment']['DropoffType'] = 'REGULAR_PICKUP';
		$_['RequestedShipment']['ShipTimestamp'] = date('c');
		 
		$_['RequestedShipment']['PackagingType'] = 'YOUR_PACKAGING'; // valid values FEDEX_BOX, FEDEX_PAK, FEDEX_TUBE, YOUR_PACKAGING, ...
		
		$_['RequestedShipment']['Shipper'] = array(
			'Address' => array(
				'PostalCode' => $this->settings['postcode'],
				'CountryCode' => $this->base['country']));

		$_['RequestedShipment']['Recipient'] = array(
			'Address' => array(
				'Residential' => (apply_filters('shopp_fedex_residential', false, $Shipping) === true ? '1':'0'),
				'StreetLines' => array($Shipping->address,$Shipping->xaddress),
				'City' => $Shipping->city,
				'StateOrProvinceCode' => $Shipping->state,
				'PostalCode' => $Shipping->postcode,
				'CountryCode' => $Shipping->country));


		$_['RequestedShipment']['ShippingChargesPayment'] = array(
			'PaymentType' => 'SENDER',
			'Payor' => array('AccountNumber' => $this->settings['account'],
			'CountryCode' => 'US'));
		
		if (in_array('SMART_POST', $this->rate['services']) && !empty($this->settings['smartposthubid']) ){
			$_['RequestedShipment']['SmartPostDetail'] = array(
				'Indicia' => 'PARCEL_SELECT',
				'HubId' => $this->settings['smartposthubid']);
		}
			
		$_['RequestedShipment']['RateRequestTypes'] = 'ACCOUNT'; 
		// $_['RequestedShipment']['RateRequestTypes'] = 'LIST';
		 
		$_['RequestedShipment']['PackageCount'] = count($this->packages);
		$_['RequestedShipment']['PackageDetail'] = 'INDIVIDUAL_PACKAGES';
		if ($this->settings['saturday'] == 'on') $_['RequestedShipment']['SpecialServicesRequested'] = array(
			'SpecialServiceTypes' => array('SATURDAY_DELIVERY')
		);
		
		$requested = array();
		$count = 0;
		foreach ($this->packages as $seq => $package) {
			$requested["$count"] = array();
			$requested["$count"]['SequenceNumber'] = $seq;
			if($this->insure) $requested["$count"]['InsuredValue'] = array(
				'Amount' => $package['insure'],
				'Currency' => 'USD'
				);
			if ($package['description']) $requested["$count"]['ItemDescription'] = $package['description'];
			$requested["$count"]['Dimensions'] = array(
				'Length' => $package['length'],
				'Width' => $package['width'],
				'Height' => $package['height'],
				'Units' => "IN"
				);
			$requested["$count"]['Weight'] = array(
				'Units' => 'LB',
				'Value' => number_format( ($package["weight"] < 0.1 ? 0.1 : $package["weight"]), 1, '.', '')
				);
			$count++;
		}
		$_['RequestedShipment']['RequestedPackageLineItems'] = $requested;
		
		return apply_filters('shopp_fedex_request', $_, $session,$description,$postcode,$country);
	} 
	
	function verify () {         
		if (!$this->activated()) return;
		$this->packages[1] = array(
			'weight' => 2,
			'height' => 3,
			'length' => 10,
			'width' => 10,
			'insure' => 10
			);
		$Shipping = new stdClass();
		$Shipping->postcode = 10012;
		$Shipping->country = US;
		
		$request = $this->build('1','Authentication test',$Shipping);
		$request['RequestedShipment']['PackageCount'] = '2';
		$request['RequestedShipment']['PackageDetail'] = 'INDIVIDUAL_PACKAGES';  //  Or PACKAGE_SUMMARY
		$request['RequestedShipment']['RequestedPackageLineItems'] = array('0' => array('Weight' => array('Value' => 2.0,
		                                                                                    'Units' => 'LB'),
		                                                                                    'Dimensions' => array('Length' => 10,
		                                                                                        'Width' => 10,
		                                                                                        'Height' => 3,
		                                                                                        'Units' => 'IN')),
		                                                                   '1' => array('Weight' => array('Value' => 5.0,
		                                                                                    'Units' => 'LB'),
		                                                                                    'Dimensions' => array('Length' => 20,
		                                                                                        'Width' => 20,
		                                                                                        'Height' => 10,
		                                                                                        'Units' => 'IN')));
		if(SHOPP_DEBUG) new ShoppError("FedEx verify test request: "._object_r($request),false,SHOPP_DEBUG_ERR);
		$response = $this->send($request);
		if(SHOPP_DEBUG) new ShoppError("FedEx verify test response: "._object_r($response),false,SHOPP_DEBUG_ERR);
		if (isset($response->HighestSeverity)
			&& ($response->HighestSeverity == 'FAILURE'
			|| $response->HighestSeverity == 'ERROR')) 
		 	new ShoppError($response->Notifications->Message,'fedex_verify_auth',SHOPP_ADDON_ERR);
	}   
	
	function send ($request) {
		try {
			if (class_exists('SoapClient')) {
				ini_set("soap.wsdl_cache_enabled", "1");
				$client = new SoapClient($this->wsdl_url);
				$response = $client->getRates($request);
			} elseif (class_exists('SOAP_Client')) {
				$WSDL = new SOAP_WSDL($this->wsdl_url);
				$client = $WSDL->getProxy();
				$returned = $client->getRates($request);
				$response = new StdClass();
				foreach ($returned as $key => $value) {
					if (empty($key)) continue;
					$response->{$key} = $value;
				}
				if (is_array($response->RateReplyDetails) && is_array($response->RateReplyDetails[0]))
					$response->RateReplyDetails = $this->fix_pear_soap_result_bug($response->RateReplyDetails);
				if(is_object($response->RateReplyDetails))
					$response->RateReplyDetails = array($response->RateReplyDetails);

			}
		} catch (Exception $e) {
			new ShoppError(__("FedEx could not be reached for realtime rates.","Shopp"),'fedex_connection',SHOPP_COMM_ERR);
			if(SHOPP_DEBUG) new ShoppError("Exception: "._object_r($e),false,SHOPP_DEBUG_ERR);
			return false;
		}

		return $response;
	}
	
	// Workaround for a severe parse bug in PEAR-SOAP 0.12 beta				
	function fix_pear_soap_result_bug ($array) {
		$rates = array();
		foreach ($array as $value) {
			if (is_object($value)) $rates[] = $value;
			else $rates = array_merge($rates,$this->fix_pear_soap_result_bug($value));
		}
		return $rates;
	}
	
	function logo () {
		return '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';
	}
	
	function wsdl () {
		$lookup = (isset($_GET['shopp_fedex']))?$_GET['shopp_fedex']:'';
		if ($lookup != 'wsdl') return;
		$wsdl = '';
		$wsdlgz = '';
		
		if(function_exists('bzdecompress'))
			$contents = bzdecompress(base64_decode($wsdl));
		elseif(function_exists('gzuncompress'))
			$contents = gzuncompress(base64_decode($wsdlgz));
		elseif(defined('SHOPP_FEDEX_WSDL_FILE'))
			$contents = file_get_contents(SHOPP_FEDEX_WSDL_FILE);
		else { 
			new ShoppError(__('Unable to decompress wsdl file.','Shopp'),'wsdl_decompress',SHOPP_ERR); 
			return; 
		}
		
		$contents = str_replace('__SERVICE_URL__',($this->test?$this->test_url:$this->url),$contents);

		$expire = 31536000;
		header('Content-Type: text/xml; charset=UTF-8');
		header('Vary: Accept-Encoding'); // for proxies
		header('Expires: '.gmdate("D, d M Y H:i:s", time() + $expire).' GMT');
		header("Cache-Control: public, max-age=$expire");

		if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && strpos(strtolower($_SERVER['HTTP_ACCEPT_ENCODING']), 'gzip') !== false) {
			$encoded = gzencode($contents);
			header('Content-Encoding: gzip');
			header("Content-length: ".strlen($encoded));
			echo $encoded;
		} else echo $contents;
		exit();
	}
	
}
?>